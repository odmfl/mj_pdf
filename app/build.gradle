/*
    MIT License

    Copyright (c) 2022 Mudlej

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.

 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    buildToolsVersion "30.0.3"
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.gitlab.mudlej.MjPdfReader"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 42
        versionName "1.4.2"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.10"

    implementation 'androidx.preference:preference-ktx:1.2.0'

    api 'androidx.activity:activity-ktx:1.6.0-beta01'

    // AndroidX Fragment library Kotlin
    implementation "androidx.fragment:fragment-ktx:1.5.2"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.1'

    // Room
    implementation "androidx.room:room-runtime:2.4.3"
    annotationProcessor "androidx.room:room-compiler:2.4.3"
	
	implementation 'com.github.mhiew:pdfium-android:1.9.2'

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:2.4.3"

    implementation 'androidx.appcompat:appcompat:1.6.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Material Design
    implementation 'com.google.android.material:material:1.6.1'

    // Intro Library
    implementation 'com.github.paolorotolo:appintro:v5.1.0'

    implementation 'com.github.mhiew:android-pdf-viewer:3.2.0-beta.3'

    // License Presenter Library (Proguard config not needed)
    implementation 'com.github.franmontiel:AttributionPresenter:1.0.1'

    // PdfBox-Android library (for extracting text for text-mode)
    implementation 'com.tom-roush:pdfbox-android:2.0.25.0'

    // Gson
    implementation 'com.google.code.gson:gson:2.9.1'

}
